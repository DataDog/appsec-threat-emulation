#!/usr/bin/env node

// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/) Copyright 2023 Datadog, Inc.

const { Command } = require('commander');
const Table = require('cli-table');
const program = new Command();

const attacks = require('./attacks');

program
  .name('threat-emulation')
  .description('ASM threat emulation tool')
  .version('0.0.1');
//program.version('0.0.1', '-v, --vers', 'output the current version');


program.command('list')
    .description('List of the attacks')
    .action((str, options) => {
        console.log(getAttackList())
    });


program.command('run')
    .description('Run all attacks or specific attack')
    // .argument('[attackID]', 'run specific attack')
    .requiredOption('-a, --attack <attack_id>', 'Attack ID you want to detonate, Use all to run all attacks')
    // .option('--target', 'the target url, default is http://localhost:8081')
    .option('-t, --target <type>', 'the target url, default is configured to use docker hosts http://juiceshop/')
    .action((options) => {
        // if(options.attack == 'all'){
        //     return attacks.runAll(options.target);
        // }
        attacks.run(options.attack, options.target)
    });

program.parse();



function getAttackList(){
   
    var table = new Table();
    
    // instantiate
    var table = new Table({
        head: ['ID', 'Attack name']
    });
    let attackList = attacks.getList();
    for (const attack of attackList) {
        table.push([attack.id, attack.description]);
    }
    
    return table.toString();
}

